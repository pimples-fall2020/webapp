# This is a basic workflow to help you get started with Actions
name: Build and Deploy Webapp
# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
env:
  ARTIFACT_NAME: csye6225-webapp-${{ github.run_number }}.zip
  CODEDEPLOY_APPLICATION_NAME: ${{secrets.CODEDEPLOY_APPLICATION_NAME}}
  CODEDEPLOY_APPLICATION_DEPLOYMENT_GROUP_NAME: ${{secrets.CODEDEPLOY_APPLICATION_DEPLOYMENT_GROUP_NAME}}
  AWS_REGION: ${{secrets.AWS_REGION}}

on:
  push:
    branches: [master]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  ci_cd:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      #Install Packer

      # Runs a set of commands using the runners shell
      - name: Build deployment artifact
        run: |
          mkdir codedeploy_artifact
          zip -r ${{ env.ARTIFACT_NAME }} ./
          pwd
          ls -al
          mv ${{ env.ARTIFACT_NAME }} codedeploy_artifact/
          ls -al
          pwd
          cd codedeploy_artifact
          pwd
          ls -al
          cd ..
          pwd
          ls -al

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{secrets.AWS_REGION}}

      - name: Copy Artifact to S3
        run: |
          aws s3 sync ./codedeploy_artifact s3://${{ secrets.S3_CODEDEPLOY_BUCKET }}

      - name: Deploy app to CodeDeploy
        run: |
          output=$(aws deploy create-deployment \
              --application-name ${{ env.CODEDEPLOY_APPLICATION_NAME }} \
              --deployment-config-name CodeDeployDefault.AllAtOnce \
              --deployment-group-name ${{ env.CODEDEPLOY_APPLICATION_DEPLOYMENT_GROUP_NAME }} \
              --description "Webapp deployment" \
              --s3-location bucket=${{ secrets.S3_CODEDEPLOY_BUCKET }},bundleType=zip,key=${{ env.ARTIFACT_NAME }} \
              --region ${{ env.AWS_REGION }} \
              --output json)

              echo $output

              dId=$(echo $output | jq -r '.deploymentId')

              aws deploy wait deployment-successful --deployment-id $dId
